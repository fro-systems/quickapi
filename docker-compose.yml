version: '2'
networks:
  # Network for mongodb
  mongodb_net:
    driver: bridge
    ipam:
      driver: default
      config:
      # Change this subnet range if it conflicts with your personal/work network
        - subnet: 192.168.213.0/24
          gateway: 192.168.213.1
  nestjs-network:
    driver: bridge
    
services:
  # Zookeper
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - 2181:2181
    volumes:
      - ./_data/zookeeper/data:/data
    networks:
      - nestjs-network

  # Kafka
  kafka:
    image: wurstmeister/kafka:2.12-2.5.0
    hostname: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: LISTENER_DOCKER_INTERNAL://:19092,LISTENER_DOCKER_EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://127.0.0.1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_BROKER_ID: 1
      KAFKA_CREATE_TOPICS: __consumer_offsets:50:1,user.create:1:1
    volumes:
      - ./_data/kafka/data:/var/lib/kafka/data
    depends_on:
      - zookeeper
    networks:
      - nestjs-network

  # Mongodb
  mongodb:
    image: mongo:latest
    container_name: mongodb
    hostname: mongodb
    networks:
      - mongodb_net
      - nestjs-network
    ports:
      - 27017:27017

  #QuickApi
  quickapi-omar:
    container_name: quickapi-omar
    image: frodevclau/quickapi:latest
    build:
        context: .
        target: development
        dockerfile: ./Dockerfile
    command: npm run start:dev
    ports:
      - 3000:3000
      - 9229:9229
    depends_on:
      - kafka
      - mongodb
    networks:
      - nestjs-network
    volumes:
        - .:/usr/src/app
        - /usr/src/app/node_modules
    restart: unless-stopped
